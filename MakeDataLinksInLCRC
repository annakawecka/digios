#!/bin/bash

if [ $0 != "-bash" ]; then
  echo -e "\e[93m PLEASE source MakeDataLinksInLCRC \e[0m"
  exit
fi

echo -e "\e[92m#############################################"
echo -e "#     Make data link for LCRC"
echo -e "#############################################\e[0m"

DATAPATH=/lcrc/project/HELIOS/experimentsData/
expDIR=$(pwd)

echo " This bash script do only 2 things: "
echo "  1) change the expName.sh"
echo "  2) setup symbolic link to the exp data."
echo ""
echo " This script is assume you will work at the master branch."
echo " If not, please use SetUpNewExp "
echo "--------------------------------------------"

if [ $# -eq 0 ]; then
    git branch -a
    read -p 'Eneter the experiment name: ' expName
else
    expName=$1
fi

isBranchExist=`git branch -a | grep ${expName} | wc -l`
if [ ${isBranchExist} -eq 0 ]; then
   echo "Experimental name (${expName}) does not exist. Abort."
   exit
fi

if [ ${expName} == "master" ] || [ ${expName} == "ARR01" ]; then
   echo -e "\e[93m============ Restore everything to master \e[0m"
   git checkout master expName.sh
   #git checkout master ${expDIR}/analysis/working/GeneralSortMapping.h
   expName="ARR01"
   isMaster=1
else
   echo -e "\e[93m=================== Overwrite the expName.sh \e[0m"
   echo "!!!!!!!!!! to restore the expName.sh by > git checkout expName.sh"
   echo "#!/bin/bash -l" > ${expDIR}/expName.sh
   echo "expName=${expName}" >> ${expDIR}/expName.sh 
   isMaster=0
fi

echo -e "\e[93m=================== Exp Name : ${expName} \e[0m"

Data=${DATAPATH}/${expName}/data
mergedData=${DATAPATH}/${expName}/merged_data
rootData=${DATAPATH}/${expName}/root_data

#===== Check folder exist
echo -e "\e[93m=================== create folders \e[0m"
if [ -d ${Data} ]; then 
  echo " ${Data} ....... already exist."
else
    mkdir -pv ${Data}
fi

if [ -d ${mergedData} ]; then
    echo " ${mergedData} ... already exist."
else
    mkdir -pv ${mergedData}
fi

if [ -d ${rootData} ]; then
    echo " ${rootData} .. already exist."
else
    mkdir -pv ${rootData}
fi

#===== create symbolic links
echo -e "\e[93m=================== creating symbolic links \e[0m"
rm -f ${expDIR}/analysis/data
rm -f ${expDIR}/analysis/merged_data
rm -f ${expDIR}/analysis/root_data

ln -sfv ${Data} ${expDIR}/analysis/data
ln -sfv ${mergedData} ${expDIR}/analysis/merged_data
ln -sfv ${rootData} ${expDIR}/analysis/root_data

#===== sourse the heliosrc.sh
echo -e "\e[93m=================== source heliosrc.sh \e[0m"
echo $(pwd)
cd $(pwd)
source heliosrc.sh
env | grep "HELIOSSYS"

#===== checkout the mapping 
if [ ${isMaster} == 0 ]; then
   echo -e "\e[93m=================== Checkout the mapping from the branch \e[0m"
   cd ${HELIOSSYS}/analysis/working
   #git checkout origin/${expName} GeneralSortMapping.h 

   #isNewMapping=$(grep -rn "NARRAY" GeneralSortMapping.h)

   
   cd ${HELIOSSYS}
fi

echo -e "\e[93m=================== done. \e[0m"

if [ ${isMaster} == 0 ]; then
   echo -e "\e[91m to restor to master > simple run the script again and pick master \e[0m "  
fi
